extensions [profiler csv]
globals [log_changes old_mean_wealth]
turtles-own [wealth wealth_return tax decile_group percentile_group]

to setup
  clear-all
  ask patches [ set pcolor white ]
  create-turtles N [
    initialize
  ]
  set log_changes (list 0 0)
  visualize
  reset-ticks
end

to initialize
  setxy random-xcor random-ycor
  set shape "face happy"
  set wealth 1
  set decile_group (list)
  set percentile_group (list)
end

to go
  set old_mean_wealth mean [ wealth ] of turtles
  turtles_wealth_returns
  turtles_tax
  turtles_new_wealth
  set log_changes fput (ln mean [ wealth ] of turtles - ln old_mean_wealth) log_changes
  while [length log_changes > volatility_interval] [set log_changes butlast log_changes]
  ;turtles_quantile_groups
  visualize
  tick
  if (ticks = stop_tick) [stop]
end

to turtles_wealth_returns
  ask turtles [
    set wealth_return wealth * ((random-growth-factor mu sigma) - 1)
  ]
end

to turtles_tax
  ask turtles [
    ifelse (tax_regime = "wealth") [
      set tax (wealth + wealth_return) * taxrate
    ] [
      set tax (max list (wealth_return) 0) * taxrate
    ]
  ]
end

to turtles_new_wealth
  let tax_revenue sum [tax] of turtles
  let mean_log_wealth mean [log wealth 10] of turtles
  let sd_log_wealth standard-deviation [log wealth 10] of turtles
  ask turtles [
    set wealth (wealth + wealth_return - tax + tax_revenue / count turtles)
  ]
end

to turtles_quantile_groups
  let sorted-turtles sort-on [wealth] turtles
  let ranks n-values length sorted-turtles [x -> x + 1]
  (foreach sorted-turtles ranks [[the-turtle r] ->
    ask the-turtle [
      set decile_group fput ceiling (10 * r / count turtles) decile_group
      while [length decile_group > mobility_interval] [set decile_group butlast decile_group]
      set percentile_group fput ceiling (100 * r / count turtles) percentile_group
      while [length percentile_group > mobility_interval] [set percentile_group butlast percentile_group]
  ]])
end

to visualize
  if visualize_world [
    ask turtles [
      set size ifelse-value (wealth < 0.3) [0.3] [sqrt wealth]
    ]
  ]
end

;;; Scenarios

to scenario-parameters [scenario]
  if scenario = "benchmark" [
    set mu 0.06
    set sigma 0.3
  ]
  if scenario = "entrepreneurs" [
    set mu 0.015
    set sigma 0.3
  ]
  setup
end

;;; Model reporters

to-report random-growth-factor [mu_ sigma_]
  report
  exp (mu_ - sigma_ ^ 2 / 2 + sigma_ * random-shock)
end

to-report random-shock
  report ifelse-value (distribution_shocks = "normal") [random-normal 0 1] [random-exponential sqrt 0.5 - random-exponential sqrt 0.5]
  ; Notes:
  ; Laplace(0,b) can be generated by a diff of 2 iid draws from Exponential(1/b)
  ; Laplace has variance 2*b^2. We want to have shocks having variance 1, so b = sqrt(1/2)
end

;;; Output reporters

to-report gini [w]
 report (2 * sum (map [ [x y] -> x * y ]
                 n-values N [ x -> x + 1 ]
                 sort w) )
                 / (N * (sum w)) - (N + 1) / N
end

to-report tail-exponent-fit [w]
  let threshold (mean w) * mean_factor_fit ;fit-threshold w ;
  set w filter [x -> x > threshold] w
  report 1 + length w / sum map [x -> ln (x / threshold)] w
end

to-report fit-threshold [w]
  report ifelse-value (fit_above = "upper quantile_fit") [
    quantile w (1 - quantile_fit)
  ][
    mean w * mean_factor_fit
  ]
end

to-report num-wealth-above-threshold [w]
  report length filter [x -> x > fit-threshold w] w
end

to-report transition_prob_decile [move_from move_to]
  report count turtles with [first decile_group = move_to and last decile_group = move_from] / count turtles with [last decile_group = move_from]
end

to-report wealth-fraction-top [w topshare]
  report sum (sublist (reverse sort w) 0 round (topshare * count turtles)) / sum w
end


to-report quantile [ data-list quantile-level ]
  let sorted-list sort data-list
  let index (length sorted-list * quantile-level) - 1
  let lower-index floor index
  let upper-index ceiling index
  ifelse lower-index = upper-index [
    report item lower-index sorted-list
  ] [
    let lower-value item lower-index sorted-list
    let upper-value item upper-index sorted-list
    let interpolation-factor (index - lower-index)
    report lower-value + interpolation-factor * (upper-value - lower-value)
  ]
end

;;; For behavior space

to-report tail_exponent_pdf report tail-exponent-fit [wealth] of turtles end
to-report stay_in_top_10 report transition_prob_decile 10 10 end
to-report longterm_growth_rate report exp ((ln mean [wealth] of turtles) / ticks) end
to-report sd_log_changes report standard-deviation log_changes end
to-report gini_all report gini [wealth] of turtles end
to-report share_top_10 report wealth-fraction-top [wealth] of turtles 0.1 end
to-report share_top_1 report wealth-fraction-top [wealth] of turtles 0.01 end
to-report share_top report max [wealth] of turtles / sum [wealth] of turtles end
to-report fraction_in_fit report num-wealth-above-threshold [wealth] of turtles / count turtles end
to-report fraction_above_mean report count turtles with [wealth > mean [wealth] of turtles] / count turtles end
@#$#@#$#@
GRAPHICS-WINDOW
380
10
601
232
-1
-1
6.455
1
10
1
1
1
0
0
0
1
-16
16
-16
16
1
1
1
ticks
30.0

SLIDER
11
261
231
294
taxrate
taxrate
0
0.5
0.02
0.005
1
NIL
HORIZONTAL

SLIDER
90
36
267
69
N
N
0
10000
1000.0
10
1
NIL
HORIZONTAL

BUTTON
10
35
84
68
NIL
Setup
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
10
210
72
243
Go
go
T
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

PLOT
832
10
1114
130
mean wealth
NIL
NIL
0.0
10.0
0.0
2.0
true
false
"" ""
PENS
"mean wealth" 1.0 0 -16777216 true "" "plot mean [wealth] of turtles"

PLOT
832
370
1113
490
wealth inequality (Gini)
NIL
NIL
0.0
10.0
0.0
1.0
true
false
"" ""
PENS
"default" 1.0 0 -16777216 true "" "plot ( 2 * sum (map [ [x y] -> x * y ] \n                 n-values N [ x -> x + 1 ] \n                 sort [wealth] of turtles) )\n      / (N * (sum [wealth] of turtles)) - (N + 1) / N"

MONITOR
1113
56
1262
101
long term growth rate
longterm_growth_rate
5
1
11

TEXTBOX
10
10
303
31
Input parameters
18
0.0
1

TEXTBOX
11
186
201
207
Taxation and redistribution
12
0.0
1

MONITOR
1113
11
1262
56
mean wealth
mean [wealth] of turtles
5
1
11

PLOT
380
237
660
407
wealth distribution
NIL
NIL
0.0
10.0
-1.0
0.0
false
false
"clear-plot" "if (ticks mod 50 = 0) [clear-plot]"
PENS
"default" 1.0 0 -16777216 true "; clear-plot\nset-plot-x-range (floor (min [log wealth 10] of turtles)) (1 + ceiling max [log wealth 10] of turtles)\nset-plot-y-range precision (log (1 - (count turtles - 1) / count turtles) 10) 1 - 0.1 (0)" "let sorted-wealths sort [wealth] of turtles\nplot-pen-up\nplotxy log (item 0 sorted-wealths) 10 (0)\nplot-pen-down\nset-plot-pen-color ticks\nforeach n-values (length sorted-wealths) [i -> i] [id -> plotxy (log (item id sorted-wealths) 10) log (1 - (id) / length sorted-wealths) 10]"
"mean" 1.0 0 -7500403 true "clear-plot" "if (show_fit_threshold) [\n  plotxy (log (fit-threshold [wealth] of turtles) 10) 0 - precision (log N 10) 1\n  plotxy (log (fit-threshold [wealth] of turtles) 10) 0\n]\n;if (show_fit_threshold) [\n;  plotxy (log (mean_factor_fit * mean [wealth] of turtles) 10) 0 - precision (log N 10) 1\n;  plotxy (log (mean_factor_fit * mean [wealth] of turtles) 10) 0\n;]\nset-plot-x-range (floor (min [log wealth 10] of turtles)) (1 + ceiling max [log wealth 10] of turtles)\nset-plot-y-range precision (log (1 - (count turtles - 1) / count turtles) 10) 1 - 0.1 (0)\nset-plot-pen-color ticks\n\n"

PLOT
665
237
825
357
tail exponent
NIL
NIL
0.0
10.0
-5.0
-0.5
true
false
"" "set-plot-y-range 0.5 5"
PENS
"default" 1.0 0 -16777216 true "" "if (ticks > 0) [plot tail-exponent-fit [wealth] of turtles]"

MONITOR
667
360
797
405
tail exponent (pdf)
tail_exponent_pdf
3
1
11

MONITOR
667
408
797
453
tail exponent (cdf)
(tail-exponent-fit [wealth] of turtles) - 1
3
1
11

SLIDER
10
100
183
133
mu
mu
-0.5
0.5
0.02
0.005
1
NIL
HORIZONTAL

SLIDER
10
136
183
169
sigma
sigma
0
1
0.3
0.01
1
NIL
HORIZONTAL

MONITOR
189
126
341
171
time average growth rate
mu - sigma ^ 2 / 2
5
1
11

TEXTBOX
190
105
313
124
ensemble growth rate
10
0.0
1

SWITCH
384
410
555
443
show_fit_threshold
show_fit_threshold
0
1
-1000

CHOOSER
78
210
230
255
tax_regime
tax_regime
"wealth" "wealth gains"
0

TEXTBOX
13
79
288
108
Wealth: Random mutliplicative growth
12
0.0
1

MONITOR
1116
384
1186
429
Gini
gini_all
5
1
11

PLOT
832
490
1113
626
wealth shares
NIL
NIL
0.0
10.0
0.0
1.0
true
false
"" ""
PENS
"Top 10%" 1.0 0 -7500403 true "" "plot wealth-fraction-top [wealth] of turtles 0.1"
"Top 1%" 1.0 0 -16777216 true "" "plot wealth-fraction-top [wealth] of turtles 0.01"
"Top" 1.0 0 -2674135 true "" "plot max [wealth] of turtles / sum [wealth] of turtles"

MONITOR
1113
490
1178
535
Top 10%
share_top_10
3
1
11

MONITOR
1113
535
1179
580
Top 1%
share_top_1
3
1
11

MONITOR
1113
580
1179
625
Top
share_top
3
1
11

SLIDER
385
447
524
480
mean_factor_fit
mean_factor_fit
1
5
1.0
0.1
1
NIL
HORIZONTAL

MONITOR
729
455
786
500
# in fit
num-wealth-above-threshold [wealth] of turtles
17
1
11

MONITOR
669
455
726
500
in fit
fraction_in_fit
3
1
11

CHOOSER
11
365
200
410
distribution_shocks
distribution_shocks
"normal" "double exponential"
0

MONITOR
524
447
628
492
mean log wealth
mean [log wealth 10] of turtles
3
1
11

MONITOR
1117
338
1265
383
sd last log changes
sd_log_changes
5
1
11

PLOT
832
250
1114
370
volatity (sd log changes)
NIL
NIL
0.0
10.0
0.0
0.01
true
false
"" ""
PENS
"default" 1.0 0 -16777216 true "" "plot standard-deviation log_changes"

SLIDER
1114
259
1287
292
volatility_interval
volatility_interval
10
100
50.0
1
1
NIL
HORIZONTAL

PLOT
832
130
1114
250
log change
NIL
NIL
0.0
10.0
-0.1
0.1
true
false
"" ""
PENS
"log change" 1.0 0 -16777216 true "" "if ticks > 0 [plot ln mean [wealth] of turtles - ln old_mean_wealth]"
"zero" 1.0 0 -7500403 true "" "plot 0"

INPUTBOX
306
207
370
267
stop_tick
200.0
1
0
Number

SLIDER
404
562
536
595
mobility_interval
mobility_interval
0
50
20.0
1
1
NIL
HORIZONTAL

MONITOR
430
622
536
667
stay in Top 10%
stay_in_top_10
3
1
11

SLIDER
386
481
526
514
quantile_fit
quantile_fit
0.001
0.2
0.01
0.001
1
NIL
HORIZONTAL

CHOOSER
240
458
386
503
fit_above
fit_above
"mean times mean_factor_fit" "upper quantile_fit"
1

MONITOR
637
517
719
562
frac > mean
fraction_above_mean
3
1
11

SWITCH
617
94
779
127
visualize_world
visualize_world
1
1
-1000

BUTTON
25
510
220
543
profiler
profiler:start\nsetup\nrepeat 20 [go]\nprofiler:stop                                  ;; stop profiling\ncsv:to-file \"profiler_data3.csv\" profiler:data  ;; save the results\nprofiler:reset    
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

@#$#@#$#@
## WHAT IS IT?

(a general understanding of what the model is trying to show or explain)

## HOW IT WORKS

(what rules the agents use to create the overall behavior of the model)

## HOW TO USE IT

(how to use the model, including a description of each of the items in the Interface tab)

## THINGS TO NOTICE

(suggested things for the user to notice while running the model)

## THINGS TO TRY

(suggested things for the user to try to do (move sliders, switches, etc.) with the model)

## EXTENDING THE MODEL

(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)

## NETLOGO FEATURES

(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)

## RELATED MODELS

(models in the NetLogo Models Library and elsewhere which are of related interest)

## CREDITS AND REFERENCES

(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)
@#$#@#$#@
default
true
0
Polygon -7500403 true true 150 5 40 250 150 205 260 250

airplane
true
0
Polygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15

arrow
true
0
Polygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150

box
false
0
Polygon -7500403 true true 150 285 285 225 285 75 150 135
Polygon -7500403 true true 150 135 15 75 150 15 285 75
Polygon -7500403 true true 15 75 15 225 150 285 150 135
Line -16777216 false 150 285 150 135
Line -16777216 false 150 135 15 75
Line -16777216 false 150 135 285 75

bug
true
0
Circle -7500403 true true 96 182 108
Circle -7500403 true true 110 127 80
Circle -7500403 true true 110 75 80
Line -7500403 true 150 100 80 30
Line -7500403 true 150 100 220 30

butterfly
true
0
Polygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240
Polygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240
Polygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163
Polygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165
Polygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225
Circle -16777216 true false 135 90 30
Line -16777216 false 150 105 195 60
Line -16777216 false 150 105 105 60

car
false
0
Polygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180
Circle -16777216 true false 180 180 90
Circle -16777216 true false 30 180 90
Polygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89
Circle -7500403 true true 47 195 58
Circle -7500403 true true 195 195 58

circle
false
0
Circle -7500403 true true 0 0 300

circle 2
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240

cow
false
0
Polygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167
Polygon -7500403 true true 73 210 86 251 62 249 48 208
Polygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123

cylinder
false
0
Circle -7500403 true true 0 0 300

dot
false
0
Circle -7500403 true true 90 90 120

face happy
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240

face neutral
false
0
Circle -7500403 true true 8 7 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Rectangle -16777216 true false 60 195 240 225

face sad
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183

fish
false
0
Polygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166
Polygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165
Polygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60
Polygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166
Circle -16777216 true false 215 106 30

flag
false
0
Rectangle -7500403 true true 60 15 75 300
Polygon -7500403 true true 90 150 270 90 90 30
Line -7500403 true 75 135 90 135
Line -7500403 true 75 45 90 45

flower
false
0
Polygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135
Circle -7500403 true true 85 132 38
Circle -7500403 true true 130 147 38
Circle -7500403 true true 192 85 38
Circle -7500403 true true 85 40 38
Circle -7500403 true true 177 40 38
Circle -7500403 true true 177 132 38
Circle -7500403 true true 70 85 38
Circle -7500403 true true 130 25 38
Circle -7500403 true true 96 51 108
Circle -16777216 true false 113 68 74
Polygon -10899396 true false 189 233 219 188 249 173 279 188 234 218
Polygon -10899396 true false 180 255 150 210 105 210 75 240 135 240

house
false
0
Rectangle -7500403 true true 45 120 255 285
Rectangle -16777216 true false 120 210 180 285
Polygon -7500403 true true 15 120 150 15 285 120
Line -16777216 false 30 120 270 120

leaf
false
0
Polygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195
Polygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195

line
true
0
Line -7500403 true 150 0 150 300

line half
true
0
Line -7500403 true 150 0 150 150

pentagon
false
0
Polygon -7500403 true true 150 15 15 120 60 285 240 285 285 120

person
false
0
Circle -7500403 true true 110 5 80
Polygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90
Rectangle -7500403 true true 127 79 172 94
Polygon -7500403 true true 195 90 240 150 225 180 165 105
Polygon -7500403 true true 105 90 60 150 75 180 135 105

plant
false
0
Rectangle -7500403 true true 135 90 165 300
Polygon -7500403 true true 135 255 90 210 45 195 75 255 135 285
Polygon -7500403 true true 165 255 210 210 255 195 225 255 165 285
Polygon -7500403 true true 135 180 90 135 45 120 75 180 135 210
Polygon -7500403 true true 165 180 165 210 225 180 255 120 210 135
Polygon -7500403 true true 135 105 90 60 45 45 75 105 135 135
Polygon -7500403 true true 165 105 165 135 225 105 255 45 210 60
Polygon -7500403 true true 135 90 120 45 150 15 180 45 165 90

sheep
false
0
Rectangle -7500403 true true 151 225 180 285
Rectangle -7500403 true true 47 225 75 285
Rectangle -7500403 true true 15 75 210 225
Circle -7500403 true true 135 75 150
Circle -16777216 true false 165 76 116

square
false
0
Rectangle -7500403 true true 30 30 270 270

square 2
false
0
Rectangle -7500403 true true 30 30 270 270
Rectangle -16777216 true false 60 60 240 240

star
false
0
Polygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108

target
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240
Circle -7500403 true true 60 60 180
Circle -16777216 true false 90 90 120
Circle -7500403 true true 120 120 60

tree
false
0
Circle -7500403 true true 118 3 94
Rectangle -6459832 true false 120 195 180 300
Circle -7500403 true true 65 21 108
Circle -7500403 true true 116 41 127
Circle -7500403 true true 45 90 120
Circle -7500403 true true 104 74 152

triangle
false
0
Polygon -7500403 true true 150 30 15 255 285 255

triangle 2
false
0
Polygon -7500403 true true 150 30 15 255 285 255
Polygon -16777216 true false 151 99 225 223 75 224

truck
false
0
Rectangle -7500403 true true 4 45 195 187
Polygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194
Rectangle -1 true false 195 60 195 105
Polygon -16777216 true false 238 112 252 141 219 141 218 112
Circle -16777216 true false 234 174 42
Rectangle -7500403 true true 181 185 214 194
Circle -16777216 true false 144 174 42
Circle -16777216 true false 24 174 42
Circle -7500403 false true 24 174 42
Circle -7500403 false true 144 174 42
Circle -7500403 false true 234 174 42

turtle
true
0
Polygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210
Polygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105
Polygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105
Polygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87
Polygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210
Polygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99

wheel
false
0
Circle -7500403 true true 3 3 294
Circle -16777216 true false 30 30 240
Line -7500403 true 150 285 150 15
Line -7500403 true 15 150 285 150
Circle -7500403 true true 120 120 60
Line -7500403 true 216 40 79 269
Line -7500403 true 40 84 269 221
Line -7500403 true 40 216 269 79
Line -7500403 true 84 40 221 269

x
false
0
Polygon -7500403 true true 270 75 225 30 30 225 75 270
Polygon -7500403 true true 30 75 75 30 270 225 225 270
@#$#@#$#@
NetLogo 6.4.0
@#$#@#$#@
@#$#@#$#@
@#$#@#$#@
<experiments>
  <experiment name="experiment tax wealth" repetitions="100" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>tail_exponent_pdf</metric>
    <metric>stay_in_top_10</metric>
    <metric>longterm_growth_rate</metric>
    <metric>sd_log_changes</metric>
    <metric>gini_all</metric>
    <metric>share_top_10</metric>
    <metric>share_top_1</metric>
    <metric>share_top</metric>
    <enumeratedValueSet variable="mu">
      <value value="0.02"/>
    </enumeratedValueSet>
    <steppedValueSet variable="taxrate" first="0" step="0.001" last="0.05"/>
    <enumeratedValueSet variable="mean_factor_fit">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="N">
      <value value="1000"/>
      <value value="10000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="sigma">
      <value value="0.3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="tax_regime">
      <value value="&quot;wealth&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="stop_tick">
      <value value="200"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="mobility_interval">
      <value value="15"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="volatility_interval">
      <value value="50"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="distribution_shocks">
      <value value="&quot;normal&quot;"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="experiment tax wealth gains" repetitions="100" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>tail_exponent_pdf</metric>
    <metric>stay_in_top_10</metric>
    <metric>longterm_growth_rate</metric>
    <metric>sd_log_changes</metric>
    <metric>gini_all</metric>
    <metric>share_top_10</metric>
    <metric>share_top_1</metric>
    <metric>share_top</metric>
    <enumeratedValueSet variable="mu">
      <value value="0.02"/>
    </enumeratedValueSet>
    <steppedValueSet variable="taxrate" first="0" step="0.005" last="0.25"/>
    <enumeratedValueSet variable="mean_factor_fit">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="N">
      <value value="1000"/>
      <value value="10000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="sigma">
      <value value="0.3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="tax_regime">
      <value value="&quot;wealth gains&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="stop_tick">
      <value value="200"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="mobility_interval">
      <value value="15"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="volatility_interval">
      <value value="50"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="distribution_shocks">
      <value value="&quot;normal&quot;"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="experiment both" repetitions="100" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>tail_exponent_pdf</metric>
    <metric>stay_in_top_10</metric>
    <metric>longterm_growth_rate</metric>
    <metric>sd_log_changes</metric>
    <metric>gini_all</metric>
    <metric>share_top_10</metric>
    <metric>share_top_1</metric>
    <metric>share_top</metric>
    <enumeratedValueSet variable="mu">
      <value value="0.02"/>
    </enumeratedValueSet>
    <steppedValueSet variable="taxrate" first="0" step="0.005" last="0.1"/>
    <enumeratedValueSet variable="mean_factor_fit">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="N">
      <value value="1000"/>
      <value value="2000"/>
      <value value="5000"/>
      <value value="10000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="sigma">
      <value value="0.3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="tax_regime">
      <value value="&quot;wealth&quot;"/>
      <value value="&quot;capital income&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="stop_tick">
      <value value="200"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="mobility_interval">
      <value value="15"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="volatility_interval">
      <value value="50"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="distribution_shocks">
      <value value="&quot;normal&quot;"/>
    </enumeratedValueSet>
  </experiment>
</experiments>
@#$#@#$#@
@#$#@#$#@
default
0.0
-0.2 0 0.0 1.0
0.0 1 1.0 0.0
0.2 0 0.0 1.0
link direction
true
0
Line -7500403 true 150 150 90 180
Line -7500403 true 150 150 210 180
@#$#@#$#@
1
@#$#@#$#@
